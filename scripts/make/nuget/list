#!/bin/bash

# Check requirements
if ! command -v jq &> /dev/null; then
    echo "jq is required but not installed. Please install jq."
    exit 1
fi

if [ -z "$1" ]; then
    echo "Error: Project name is required"
    exit 1
fi

# Find project file
find_project_file() {
    local project_name=$1
    local project_file=$(find . -name "${project_name}.csproj")

    if [ -z "$project_file" ]; then
        echo "Error: Project file not found for ${project_name}"
        exit 1
    fi

    echo "$project_file"
}

# Get package ID from project file
get_package_id() {
    local project_file=$1
    local package_id=$(grep -o "<PackageId>.*</PackageId>" "$project_file" | sed "s/<PackageId>\(.*\)<\/PackageId>/\1/")

    if [ -z "$package_id" ]; then
        echo "Error: PackageId not found in ${project_file}"
        exit 1
    fi

    echo "$package_id"
}

# List versions from NuGet using the API
list_versions() {
    local package_id=$1
    local url="https://api.nuget.org/v3-flatcontainer/$(echo "$package_id" | tr [:upper:] [:lower:])/index.json"
    echo "Versions published for ${package_id}:"
    curl -s "$url" | jq -r ".versions[]"
}

# Main script
project_file=$(find_project_file "$1")
package_id=$(get_package_id "$project_file")
list_versions "$package_id"
