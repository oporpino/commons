#!/usr/bin/env bash

h1() {
    box left blue "$1"
}

h2() {
    local text="› $1"
    new_line
    underlined cyan bold "$text"
    new_line
}

h3() {
    local text="► $1"
    new_line
    underdotted blue bold "$text"
    new_line
}

hr() {
    new_line
    local line=""
    for i in $(seq 1 $MAX_WIDTH); do
        line="${line}·"
    done
    print gray "$line"
    new_line
}

command() {
    local cmd="$1"
    local description="$2"
    print -t -i green bold "$cmd"
    print white plain "$description"
}

code() {
    local code="$1"
    print -n green bold "$code"
}

arrow() {
    local text="$1"
    new_line
    print -n blue bold "► "
    print white bold "$text"
    new_line
}

bullet() {
    local text="• $1"
    new_line
    print blue bold "$text"
    new_line
}

parse_underline_params() {
    UNDERLINE_COLOR="blue"
    UNDERLINE_SIZE=100
    UNDERLINE_TEXT=""

    local args=("$@")
    local i=0

    while [ $i -lt ${#args[@]} ]; do
        case "${args[$i]}" in
            blue|green|red|yellow|white|cyan|gray)
                UNDERLINE_COLOR="${args[$i]}"
                ;;
            *)
                if [[ "${args[$i]}" =~ ^[0-9]+$ ]]; then
                    UNDERLINE_SIZE="${args[$i]}"
                else
                    UNDERLINE_TEXT="${args[$i]}"
                fi
                ;;
        esac
        ((i++))
    done
}

underlined() {
    parse_underline_params "$@"
    print "$UNDERLINE_TEXT" "$UNDERLINE_COLOR" bold

    local color_code
    color_code=$(get_color_code "$UNDERLINE_COLOR" "bold")
    local width=$(( (MAX_WIDTH * UNDERLINE_SIZE) / 100 ))
    printf "${color_code}%.0s─${NC}" $(seq 1 $width)
    new_line
}

underdotted() {
    parse_underline_params "$@"
    print "$UNDERLINE_TEXT" "$UNDERLINE_COLOR" bold

    local color_code
    color_code=$(get_color_code "$UNDERLINE_COLOR" "bold")
    local width=$(( (MAX_WIDTH * UNDERLINE_SIZE) / 100 ))
    printf "${color_code}%.0s·${NC}" $(seq 1 $width)
    new_line
}
