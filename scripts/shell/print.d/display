#!/usr/bin/env bash

h1() {
    box left blue "$1"
}

h2() {
    local text="› $1"
    new_line
    underlined cyan bold "$text"
    new_line
}

h3() {
    local text="► $1"
    new_line
    underdotted blue bold "$text"
    new_line
}

hr() {
    new_line
    local line=""
    for i in $(seq 1 $MAX_WIDTH); do
        line="${line}·"
    done
    print gray "$line"
    new_line
}

command() {
    local cmd="$1"
    local description="$2"
    print -t -i green bold "$cmd"
    print white plain "$description"
}

code() {
    local code="$1"
    print -n green bold "$code"
}

arrow() {
    local color="blue"
    local text=""
    local color_all=false

    for arg in "$@"; do
        case "$arg" in
            --all)
                color_all=true
                ;;
            blue|green|red|yellow|white|cyan|gray)
                color="$arg"
                ;;
            *)
                text="$arg"
                ;;
        esac
    done

    if [ "$color_all" = true ]; then
        print "$color" bold "► $text"
    else
        print -n "$color" bold "► "
        print white bold "$text"
    fi
}

bullet() {
    local color="blue"
    local text=""
    local color_all=false

    for arg in "$@"; do
        case "$arg" in
            --all)
                color_all=true
                ;;
            blue|green|red|yellow|white|cyan|gray)
                color="$arg"
                ;;
            *)
                text="$arg"
                ;;
        esac
    done

    if [ "$color_all" = true ]; then
        print "$color" bold "• $text"
    else
        print -n "$color" bold "• "
        print white bold "$text"
    fi
}

parse_underline_params() {
    local -A result
    while IFS=: read -r key value; do
        result["$key"]="$value"
    done < <(parse_args --color "blue" --size "100" "$@")

    UNDERLINE_COLOR="${result[color]}"
    UNDERLINE_SIZE="${result[size]}"
    UNDERLINE_TEXT="${result[text]}"
}

underlined() {
    parse_underline_params "$@"
    print "$UNDERLINE_TEXT" "$UNDERLINE_COLOR" bold

    local color_code
    color_code=$(get_color_code "$UNDERLINE_COLOR" "bold")
    local width=$(( (MAX_WIDTH * UNDERLINE_SIZE) / 100 ))
    printf "${color_code}%.0s─${NC}" $(seq 1 $width)
    new_line
}

underdotted() {
    parse_underline_params "$@"
    print "$UNDERLINE_TEXT" "$UNDERLINE_COLOR" bold

    local color_code
    color_code=$(get_color_code "$UNDERLINE_COLOR" "bold")
    local width=$(( (MAX_WIDTH * UNDERLINE_SIZE) / 100 ))
    printf "${color_code}%.0s·${NC}" $(seq 1 $width)
    new_line
}
