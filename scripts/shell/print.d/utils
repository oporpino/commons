#!/usr/bin/env bash

source "$(dirname "$0")/colors/constants"

get_color_code() {
  local color="$1"
  local style="${2:-plain}"  # se style for vazio, usa 'plain'
  local color_code=""

  case "${color}_${style}" in
    blue_bold) color_code="$BOLD_BLUE" ;;
    blue_bright) color_code="$BRIGHT_BLUE" ;;
    blue_plain) color_code="$BLUE" ;;
    green_bold) color_code="$BOLD_GREEN" ;;
    green_bright) color_code="$BRIGHT_GREEN" ;;
    green_plain) color_code="$GREEN" ;;
    yellow_bold) color_code="$BOLD_YELLOW" ;;
    yellow_bright) color_code="$BRIGHT_YELLOW" ;;
    yellow_plain) color_code="$YELLOW" ;;
    red_bold) color_code="$BOLD_RED" ;;
    red_bright) color_code="$BRIGHT_RED" ;;
    red_plain) color_code="$RED" ;;
    white_bold) color_code="$BOLD_WHITE" ;;
    white_bright) color_code="$BRIGHT_WHITE" ;;
    white_plain) color_code="$WHITE" ;;
    cyan_bold) color_code="$BOLD_CYAN" ;;
    cyan_bright) color_code="$BRIGHT_CYAN" ;;
    cyan_plain) color_code="$CYAN" ;;
    gray_plain) color_code="$GRAY" ;;
    bright_blue) color_code="$BRIGHT_BLUE" ;;
    bright_green) color_code="$BRIGHT_GREEN" ;;
    bright_yellow) color_code="$BRIGHT_YELLOW" ;;
    bright_red) color_code="$BRIGHT_RED" ;;
    bright_magenta) color_code="$BRIGHT_MAGENTA" ;;
    bright_cyan) color_code="$BRIGHT_CYAN" ;;
    bright_white) color_code="$BRIGHT_WHITE" ;;
    bright_black) color_code="$BRIGHT_BLACK" ;;
    *) color_code="" ;;
  esac

  echo -n "$color_code"
}

parse_common_params() {
    local color="$1"
    local size="$2"
    local text="$3"
    shift 3

    local args=("$@")
    local i=0

    while [ $i -lt ${#args[@]} ]; do
        case "${args[$i]}" in
            blue|green|red|yellow|white|cyan|gray)
                color="${args[$i]}"
                ;;
            *)
                if [[ "${args[$i]}" =~ ^[0-9]+$ ]]; then
                    size="${args[$i]}"
                else
                    text="${args[$i]}"
                fi
                ;;
        esac
        ((i++))
    done

    echo "$color $size $text"
}

process_args() {
    local args=("$@")
    local i=0

    while [ $i -lt ${#args[@]} ]; do
        local arg="${args[$i]}"
        case "$arg" in
            blue|green|red|yellow|white|cyan|gray)
                echo "color:$arg"
                ;;
            left|right|center)
                echo "alignment:$arg"
                ;;
            double|dotted)
                echo "style:$arg"
                ;;
            -n)
                echo "nl:0"
                ;;
            -t)
                echo "tab:1"
                echo "nl:0"
                ;;
            -i)
                echo "indent:1"
                ;;
            bold|bright|plain)
                echo "style:$arg"
                ;;
            *)
                if [[ "$arg" =~ ^[0-9]+$ ]]; then
                    echo "size:$arg"
                else
                    echo "text:$arg"
                fi
                ;;
        esac
        ((i++))
    done
}

parse_args() {
    local -A defaults=(
        ["color"]=""
        ["style"]="plain"
        ["nl"]="1"
        ["text"]=""
        ["tab"]="0"
        ["indent"]="0"
        ["size"]="100"
        ["alignment"]="center"
    )

    # Processa os par√¢metros nomeados
    while [ $# -gt 0 ]; do
        case "$1" in
            --color) defaults["color"]="$2"; shift 2 ;;
            --style) defaults["style"]="$2"; shift 2 ;;
            --nl) defaults["nl"]="$2"; shift 2 ;;
            --text) defaults["text"]="$2"; shift 2 ;;
            --tab) defaults["tab"]="$2"; shift 2 ;;
            --indent) defaults["indent"]="$2"; shift 2 ;;
            --size) defaults["size"]="$2"; shift 2 ;;
            --alignment) defaults["alignment"]="$2"; shift 2 ;;
            *) break ;;
        esac
    done

    # Processa os argumentos restantes
    while IFS=: read -r key value; do
        defaults["$key"]="$value"
    done < <(process_args "$@")

    # Retorna todos os valores
    for key in "${!defaults[@]}"; do
        echo "$key:${defaults[$key]}"
    done
}

parse_print_args() {
    local -A result
    while IFS=: read -r key value; do
        result["$key"]="$value"
    done < <(parse_args --style "plain" --nl "1" --tab "0" --indent "0" "$@")

    PRINT_COLOR="${result[color]}"
    PRINT_STYLE="${result[style]}"
    PRINT_NL="${result[nl]}"
    PRINT_TEXT="${result[text]}"
    PRINT_TAB="${result[tab]}"
    PRINT_INDENT="${result[indent]}"
}

parse_color_size_text() {
    local color="$1"
    local size="$2"
    local text="$3"
    shift 3

    local args=("$@")
    local i=0

    while [ $i -lt ${#args[@]} ]; do
        case "${args[$i]}" in
            blue|green|red|yellow|white|cyan|gray)
                color="${args[$i]}"
                ;;
            *)
                if [[ "${args[$i]}" =~ ^[0-9]+$ ]]; then
                    size="${args[$i]}"
                else
                    text="${args[$i]}"
                fi
                ;;
        esac
        ((i++))
    done

    echo "$color $size $text"
}
